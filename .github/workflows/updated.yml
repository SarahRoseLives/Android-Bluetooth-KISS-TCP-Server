name: BuildAPK
on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 1,15 * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Install dependencies required by Buildozer and Android SDK
      - name: Setup dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential ccache git zip unzip openjdk-11-jdk
          sudo apt-get install -y libxml2-utils wget curl
          sudo apt-get install -y python3 python3-pip
          pip install --upgrade cython

      # Install Android SDK manually
      - name: Install Android SDK
        run: |
          # Download and extract the SDK
          wget https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O cmdline-tools.zip
          mkdir -p $HOME/android-sdk/cmdline-tools
          unzip cmdline-tools.zip -d $HOME/android-sdk/cmdline-tools
          mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
          
          # Set environment variables
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH

          # Install platform tools and build tools
          sdkmanager --sdk_root=$HOME/android-sdk "platform-tools" "platforms;android-31" "build-tools;31.0.0"
          yes | sdkmanager --licenses

      # Cache dependencies with a timeout
      - name: Get Date
        id: get-date
        run: |
          echo "date=$(date -u '+%Y%m%d')" >> $GITHUB_ENV

      - name: Cache Buildozer global directory
        uses: actions/cache@v3
        with:
          path: .buildozer_global
          key: buildozer-global-${{ hashFiles('buildozer.spec') }}

      - uses: actions/cache@v3
        with:
          path: .buildozer
          key: ${{ runner.os }}-${{ env.date }}-${{ hashFiles('buildozer.spec') }}

      # Install Buildozer and Dependencies
      - name: Install Buildozer and Dependencies
        run: |
          pip install --upgrade pip
          pip install buildozer cython

      # Build APK with Buildozer
      - name: Build with Buildozer
        uses: ArtemSBulgakov/buildozer-action@v1
        id: buildozer
        with:
          command: buildozer android debug
          buildozer_version: master

      # Upload APK as an artifact
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: ${{ steps.buildozer.outputs.filename }}
